@{
    ViewData["Title"] = "Login";

    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using System.Security.Claims
@model Hairdresser_Website.Models.API

<div style="display: flex; flex-direction: column; justify-content: center; align-items: center; margin-top: 50px; font-family: 'Arial', sans-serif;">
    <h2 style="font-size: 36px; font-weight: bold; color: #4A90E2; text-align: center; margin-bottom: 30px;">Appointments List</h2>

    <button onclick="openAddAppointmentModal()" style="background-color: #4A90E2; color: white; padding: 15px 30px; font-size: 18px; border: none; cursor: pointer; border-radius: 12px; transition: background-color 0.3s ease; margin-bottom: 20px;">
        Add New Appointment
    </button>

    <div style="overflow-x: auto; width: 90%;">
        <table id="appointmentsTable" style="width: 100%; border-collapse: collapse; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 12px; overflow: hidden;">
            <thead>
                <tr style="background-color: #4A90E2; color: white;">
                    <th style="padding: 10px;">Appointment ID</th>
                    <th style="padding: 10px;">Appointment Date</th>
                    <th style="padding: 10px;">Status</th>
                    <th style="padding: 10px;">Service ID</th>
                    <th style="padding: 10px;">Employee ID</th>
                    <th style="padding: 10px;">User ID</th>
                    <th style="padding: 10px;">Actions</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div id="addAppointmentModal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; padding: 30px; border-radius: 16px; box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); z-index: 1000; width: 400px;">
    <h3 style="margin-bottom: 20px; font-size: 24px; text-align: center; color: #4A90E2;">Add New Appointment</h3>
    <form id="addAppointmentForm" style="display: flex; flex-direction: column; gap: 15px;">
        <input type="datetime-local" id="appointmentDate" placeholder="Appointment Date" required style="padding: 12px; font-size: 16px; border: 1px solid #ccc; border-radius: 8px;" />
        <input type="number" id="serviceId" placeholder="Service ID" required style="padding: 12px; font-size: 16px; border: 1px solid #ccc; border-radius: 8px;" />
        <input type="number" id="employeeId" placeholder="Employee ID" required style="padding: 12px; font-size: 16px; border: 1px solid #ccc; border-radius: 8px;" />
        <input type="text" id="userId" placeholder="User ID" required style="padding: 12px; font-size: 16px; border: 1px solid #ccc; border-radius: 8px;" />
        <button type="button" onclick="addAppointment()" style="background-color: #4A90E2; color: white; padding: 12px; font-size: 16px; border: none; border-radius: 8px; cursor: pointer; transition: background-color 0.3s ease;">
            Save Appointment
        </button>
        <button type="button" onclick="closeAddAppointmentModal()" style="background-color: #D0021B; color: white; padding: 12px; font-size: 16px; border: none; border-radius: 8px; cursor: pointer; transition: background-color 0.3s ease;">
            Cancel
        </button>
    </form>
</div>

<div id="modalOverlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); z-index: 999;" onclick="closeAddAppointmentModal()"></div>

<script>
    function openAddAppointmentModal() {
        document.getElementById('addAppointmentModal').style.display = 'block';
        document.getElementById('modalOverlay').style.display = 'block';
    }

    function closeAddAppointmentModal() {
        document.getElementById('addAppointmentModal').style.display = 'none';
        document.getElementById('modalOverlay').style.display = 'none';
    }

    function fetchAppointments() {
        fetch('/api/API')
            .then(response => response.json())
            .then(data => {
                const tableBody = document.querySelector('#appointmentsTable tbody');
                tableBody.innerHTML = ''; 

                data.forEach(appointment => {
                    const row = document.createElement('tr');
                    row.style.borderBottom = "1px solid #ddd";

                    row.innerHTML = `
                            <td style="padding: 10px;">${appointment.appointmentId}</td>
                            <td style="padding: 10px;">${new Date(appointment.appointmentDate).toLocaleString()}</td>
                            <td style="padding: 10px;">${appointment.status}</td>
                            <td style="padding: 10px;">${appointment.serviceId}</td>
                            <td style="padding: 10px;">${appointment.employeeId}</td>
                            <td style="padding: 10px;">${appointment.userId}</td>
                            <td style="padding: 10px;">
                                <button onclick="deleteAppointment(${appointment.appointmentId})" style="background-color: #D0021B; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer;">
                                    Delete
                                </button>
                            </td>
                        `;

                    tableBody.appendChild(row);
                });
            })
            .catch(error => console.error('Error fetching appointments:', error));
    }

    function deleteAppointment(appointmentId) {
        if (confirm('Are you sure you want to delete this appointment?')) {
            fetch(`/api/API/${appointmentId}`, {
                method: 'DELETE',
            })
                .then(response => {
                    if (response.ok) {
                        alert('Appointment deleted successfully.');
                        fetchAppointments(); 
                    } else {
                        alert('Failed to delete appointment.');
                    }
                })
                .catch(error => console.error('Error deleting appointment:', error));
        }
    }

    function addAppointment() {
        const appointmentDate = document.getElementById('appointmentDate').value;
        const serviceId = parseInt(document.getElementById('serviceId').value, 10);
        const employeeId = parseInt(document.getElementById('employeeId').value, 10);
        const userId = document.getElementById('userId').value;

        if (!appointmentDate || isNaN(serviceId) || isNaN(employeeId) || !userId) {
            alert('Please fill out all fields correctly.');
            return;
        }

        const newAppointment = {
            appointmentDate: appointmentDate,
            status: 0, 
            serviceId: serviceId,
            employeeId: employeeId,
            userId: userId
        };

        fetch('/api/API', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(newAppointment),
        })
            .then(response => {
                if (response.ok) {
                    alert('Appointment added successfully.');
                    closeAddAppointmentModal();
                    fetchAppointments(); 
                } else {
                    alert('Failed to add appointment.');
                }
            })
            .catch(error => console.error('Error adding appointment:', error));
    }

    document.addEventListener('DOMContentLoaded', fetchAppointments);
</script>
